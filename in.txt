{
#include <iostream>
}

rule tokenize : void = parse 
| "my name is " ['a'-'z' 'A'-'Z']* as name 
{
    std::cout << "Hello, " << name << "how are you?" << std::endl;
}
| ['a'-'z' 'A'-'Z'] ['0'-'9' 'a'-'z' 'A'-'Z' '_']* as id 
{ 
    std::cout << "ID : " << id << std::endl;
}
| [' ' '\n' '\t' '\r' ][' ' '\n' '\t' '\r']*
{
    std::cout << "SPACE" << std::endl;
}
| eof 
{ 
    std::cout << "EOF" << std::endl;
}
| _ 
{ 
    throw std::logic_error("Unparsable"); 
}

{
int main()
{
    std::string idSample = "identifierName_isThis321_ id2";
    __lexgen_lexbuf buf{idSample};
    while (!buf.isEof())
    {
        tokenize(buf);
    }
    return 0;
}
}